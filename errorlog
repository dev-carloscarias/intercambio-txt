{(() => {
                                // Desktop: texto plano cuando hay una sola ciudad
                                if (!isMultipleCity(item)) {
                                    return (
                                        <>
                                            <div
                                                className="servicing-provider-item-data-value flex-grow-1 d-mobile-none"
                                                id={`${id}-city`}
                                            >
                                                {item.selectedCity?.name ||
                                                    item.cities?.[0]?.name ||
                                                    t(
                                                        'clinicalconsultation:servicing-provider.NO-CITY-SELECTED'
                                                    )}
                                            </div>
                                            {/* Mobile: dropdown siempre visible */}
                                            <div className="servicing-provider-item-data-value flex-grow-1 d-none d-mobile-block">
                                                <div className="dd-picker-city" ref={cityDropdownRef}>
                                                    <DropdownPicker
                                                        title={t(
                                                            'clinicalconsultation:servicing-provider.PROVIDER-SPECIALTY-CITY'
                                                        )}
                                                        selected={selectedCity || item.cities?.[0]}
                                                        items={item.cities}
                                                        onSelect={handleOnSelectCity}
                                                        onOpen={() => setIsCityDropdownOpen(true)}
                                                        onClose={() => setIsCityDropdownOpen(false)}
                                                        formatItem={(c: CityInterface) =>
                                                            c.name + ' - ' + c.zipCode
                                                        }
                                                        formatSelected={(c: CityInterface) =>
                                                            c.name + ' - ' + c.zipCode}
                                                        placeholder={t(
                                                            'clinicalconsultation:servicing-provider.PROVIDER-SELECT-CITY'
                                                        )}
                                                        autoOpen={true}
                                                        id={`${id}-city-dropdown`}
                                                    />
                                                </div>
                                            </div>
                                        </>
                                    );
                                }
                                // Múltiples ciudades: dropdown para desktop y móvil
                                return (
                                    <div className="servicing-provider-item-data-value flex-grow-1">
                                        <div className="dd-picker-city d-none d-mobile-block" ref={cityDropdownRef}>
                                            <DropdownPicker
                                                title={t(
                                                    'clinicalconsultation:servicing-provider.PROVIDER-SPECIALTY-CITY'
                                                )}
                                                selected={selectedCity}
                                                items={item.cities}
                                                onSelect={handleOnSelectCity}
                                                onOpen={() => setIsCityDropdownOpen(true)}
                                                onClose={() => setIsCityDropdownOpen(false)}
                                                formatItem={(c: CityInterface) =>
                                                    c.name + ' - ' + c.zipCode
                                                }
                                                formatSelected={(c: CityInterface) =>
                                                    c.name + ' - ' + c.zipCode}
                                                placeholder={t(
                                                    'clinicalconsultation:servicing-provider.PROVIDER-SELECT-CITY'
                                                )}
                                                autoOpen={true}
                                                id={`${id}-city-dropdown`}
                                            />
                                        </div>
                                    </div>
                                );
                            })()}
